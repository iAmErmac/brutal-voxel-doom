actor BarrelSpawner //replaces ExplosiveBarrel
{
	+DONTSPLASH
	+NOGRAVITY
	+NOINTERACTION
	States
	{
	Spawn:
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("led_BarrelToggle")==0, 3)
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("led_BarrelToggle")==1, "VanSpawn")
		TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("led_BarrelToggle")==2, "MixSpawn")
		TNT1 A 0 A_SpawnItem("ModBarrel")
		Goto Death
	MixSpawn:
		TNT1 A 0 A_Jump(64, "VanSpawn", "CrateSpawn")
		Goto Spawn+3
	CrateSpawn:
		TNT1 A 1 A_SpawnItem("SupplyCrate")
		Goto Death
	VanSpawn:
		TNT1 A 1 A_SpawnItem("VanBarrel", 0, 0, 1, 0)
		Goto Death
	Death:
		TNT1 A 1
		Stop
	}
}

actor VanBarrel : ExplosiveBarrel
{
	DeathSound "weapons/rocklx"
	+RANDOMIZE
	States
	{
	Spawn:
		BAR1 AB 6
		Loop
  }
}

actor ModBarrel : ExplosiveBarrel //replaces ExplosiveBarrel
{
	DamageFactor "Melee", 0.0
	DamageFactor "FistFace", 0.0
	PainChance 256
	DeathSound "weapons/launcher/hit"
	+PUSHABLE
	+DONTGIB
	+BOUNCEONWALLS
	+QUICKTORETALIATE
	+RANDOMIZE
	States
	{
	Pain:
		TNT1 AAAAAAAAAA 0 A_SpawnItemEx("BulletArmorSpark",0,0,32,frandom(-2.0,2.0),frandom(-2.0,2.0),frandom(3.0,6.0),frandom(0.0,359.9),SXF_NOCHECKPOSITION)
		TNT1 A 0 A_PlaySound("player/armorhit")
		Goto Spawn
//Radius_Quake(2, 8, 0, 6, 0)
	Death:
		BEXP A 5 Bright Radius_Quake(2, 8, 0, 6, 0)
		BEXP B 5 Bright A_Scream
		BEXP C 5 Bright
		BEXP D 5 Bright A_Explode
		BEXP E 10 Bright
		TNT1 A 1050 Bright A_BarrelDestroy
		TNT1 A 5 A_Respawn
		Wait
   }
}

ACTOR SupplyCrate
{
   +SOLID
   +SHOOTABLE
   +NOBLOOD
   Health 10
   Radius 10
   Height 32
   DeathSound "misc/crateopen"
   DropItem "Clip" 192 100
   DropItem "RocketAmmo" 128 5
   DropItem "ShellSpawner" 64 4
   DropItem "LightArmor" 64 1
   DropItem "Cell" 64 2
   DropItem "MiniStim" 32 2
   DropItem "StimPack" 16 2
   DropItem "Medikit" 4 2
   States
   {
   Spawn:
      WBAR A -1
      Stop
   Death:
      WBAR B 2 A_Scream
      TNT1 A 0 A_SpawnItemEx("CrateDustSmoke", random(1, 3), random(1, 3), random(1, 3), frandom(1.0, 2.0), frandom(1.0, 2.0), frandom(1.0, 2.0), random(0, 359), 128)
      TNT1 A 0 A_SpawnItemEx("CrateDustSmoke", random(1, 3), random(1, 3), random(1, 3), frandom(1.0, 2.0), frandom(1.0, 2.0), frandom(1.0, 2.0), random(0, 359), 128)
      TNT1 A 0 A_SpawnItemEx("CrateDustSmoke", random(1, 3), random(1, 3), random(1, 3), frandom(1.0, 2.0), frandom(1.0, 2.0), frandom(1.0, 2.0), random(0, 359), 128)
      WBAR C 2
      TNT1 A 0 A_SpawnItemEx("CrateDustSmoke", random(1, 3), random(1, 3), random(1, 3), frandom(1.0, 2.0), frandom(1.0, 2.0), frandom(1.0, 2.0), random(0, 359), 128)
      TNT1 A 0 A_SpawnItemEx("CrateDustSmoke", random(1, 3), random(1, 3), random(1, 3), frandom(1.0, 2.0), frandom(1.0, 2.0), frandom(1.0, 2.0), random(0, 359), 128)
      WBAR D 2 A_NoBlocking
      WBAR EF 2
      WBAR G -1
      Stop
    }
}

ACTOR CrateDustSmoke
{
   PROJECTILE
   +NOCLIP
   +FORCEXYBILLBOARD

   Radius 1
   Height 1
   Damage 0
   Scale 0.5
   VSpeed 4
   Renderstyle Translucent
   Alpha 0.5

   States
   {
   Spawn:
   Death:
      SMKE ABCDDEEFFFGGGGHHHH 1 A_FadeOut(0.05)
      Stop
   }
}
//All credit goes to Cryonaut for creating this Mod(https://www.moddb.com/mods/the-code-based-visual-fx-suite-for-gzdoom-aka-codefx) I only modified it to only include the Barrel Explosions and tweaked some of the features I didn't like



ACTOR VisualSpecialEffect
{
  +CLIENTSIDEONLY
  +NOGRAVITY
  +NOINTERACTION
  +NOBLOCKMAP
  +NOTELEPORT
  +ROLLSPRITE
  +FORCEXYBILLBOARD
  +NOCLIP
  Renderstyle Add
}

ACTOR BouncyPhysicalThing
{
  +FORCEXYBILLBOARD
  +CLIENTSIDEONLY
  +NOTELEPORT
  +PAINLESS
  +ALLOWBOUNCEONACTORS
  +MISSILE
  -NOGRAVITY
  -CANBOUNCEWATER
  -NOINTERACTION
  Speed 0.01
  BounceType Doom
  BounceCount 3
  Gravity 0.8
  Health 1
  Radius 1
  Height 2
  Mass 1
}

ACTOR BigSmoke : VisualSpecialEffect
{
  Translation "0:255=#[128,128,128]"
  Radius 0
  Height 0
  RenderStyle Shaded
  Alpha 0.50
  Scale 1.25
  States
  {
  Spawn:
    MISL CC random(1,3)
		{
		A_FadeIn(0.01);
		A_SetRoll(0);
		A_SetScale(1.25);
		}
    MISL CC random(1,3)
		{
		A_FadeIn(0.01);
		A_SetRoll(2);
		A_SetScale(1.30);
		}
    MISL CC random(1,3)
		{
		A_FadeIn(0.01);
		A_SetRoll(4);
		A_SetScale(1.35);
		}
    MISL CC random(1,3)
		{
		A_FadeIn(0.01);
		A_SetRoll(6);
		A_SetScale(1.40);
		}
    MISL CC random(1,3)
		{
		A_FadeIn(0.01);
		A_SetRoll(8);
		A_SetScale(1.45);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(10);
		A_SetScale(1.50);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(12);
		A_SetScale(1.52);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(14);
		A_SetScale(1.54);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(16);
		A_SetScale(1.56);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(18);
		A_SetScale(1.58);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(20);
		A_SetScale(1.60);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(22);
		A_SetScale(1.62);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(24);
		A_SetScale(1.64);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(26);
		A_SetScale(1.66);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(28);
		A_SetScale(1.68);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(30);
		A_SetScale(1.70);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(32);
		A_SetScale(1.72);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(34);
		A_SetScale(1.74);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(36);
		A_SetScale(1.76);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(38);
		A_SetScale(1.78);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(40);
		A_SetScale(1.80);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(42);
		A_SetScale(1.82);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(44);
		A_SetScale(1.84);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(46);
		A_SetScale(1.86);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(48);
		A_SetScale(1.88);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(50);
		A_SetScale(1.90);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(52);
		A_SetScale(1.92);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(54);
		A_SetScale(1.94);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(56);
		A_SetScale(1.96);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(58);
		A_SetScale(1.98);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(60);
		A_SetScale(2.00);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(62);
		A_SetScale(2.02);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(64);
		A_SetScale(2.04);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(66);
		A_SetScale(2.06);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(68);
		A_SetScale(2.08);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(70);
		A_SetScale(2.10);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(72);
		A_SetScale(2.12);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(74);
		A_SetScale(2.14);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(76);
		A_SetScale(2.16);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(78);
		A_SetScale(2.18);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(80);
		A_SetScale(2.20);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(82);
		A_SetScale(2.22);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(84);
		A_SetScale(2.24);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(86);
		A_SetScale(2.26);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(88);
		A_SetScale(2.28);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(90);
		A_SetScale(2.30);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(92);
		A_SetScale(2.32);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(94);
		A_SetScale(2.34);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(96);
		A_SetScale(2.36);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(98);
		A_SetScale(2.38);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(100);
		A_SetScale(2.40);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(102);
		A_SetScale(2.42);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(104);
		A_SetScale(2.44);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(106);
		A_SetScale(2.46);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(108);
		A_SetScale(2.48);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(110);
		A_SetScale(2.50);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(112);
		A_SetScale(2.52);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(114);
		A_SetScale(2.54);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(116);
		A_SetScale(2.56);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(118);
		A_SetScale(2.58);
		}
    Goto Death
  Death:
    MISL CCCCCCCCCC random(1,3)
		{
		A_FadeOut(0.10);
		}
	Stop
  }
}


Actor BarSmoke : BigSmoke
{
  +BRIGHT
  Translation "32:47=152:159", "168:191=112:123"
  RenderStyle Translucent
  Alpha 0.02
}



ACTOR Ember : BouncyPhysicalThing
{
  RenderStyle Add
  BounceCount 3
  BounceFactor 0.40
  Gravity 0.35
  Friction 1.08
  Translation "212:214=229:231", "215:217=160:163", "218:223=214:219", "170:175=213:214", "176:183=216:223", "184:191=176:189"
  scale 0.09
  Alpha 0.9
  States
  {
  Spawn:
    BAL1 AAAAAAAAAAAAA random(2,5) Bright
  Death:
	BAL1 AAAAAAAAAAAAAAA random(2,4) Bright A_FadeOut
  	Loop
  }
}

ACTOR GreenEmber : Ember
{
	Translation "160:191=%[0.00,0.00,0.00]:[0.00,2.00,0.00]", "208:235=#[0,255,0]"
}


ACTOR Boom : VisualSpecialEffect
{
  RenderStyle Translucent
  Alpha 0.84
  States
  {
  Spawn:
    TNT1 A 0
    BAL1 C 3 Bright
	BAL2 C 3 Bright
	MISL BC 4 Bright
    MISL DDDDD 2 Bright A_FadeOut(0.2)
	Stop
  }
}

ACTOR AdditiveBoom : Boom
{
	RenderStyle Add
}

ACTOR SmallBoom : Boom
{
	Scale 0.50
	Alpha 0.88
}

ACTOR SmallAdditiveBoom : AdditiveBoom
{
	Scale 0.50
}

ACTOR LargeBoom : Boom
{
	Scale 1.75
	Alpha 0.80
}

ACTOR LargeAdditiveBoom : AdditiveBoom
{
	Scale 1.75
}



ACTOR SmallSmoke : VisualSpecialEffect
{
  Translation "0:255=#[128,128,128]"
  Radius 0
  Height 0
  RenderStyle Shaded
  Alpha 0.05
  Scale 0.08
  States
  {
  Spawn:
    MISL CC random(1,3)
		{
		A_FadeIn(0.01);
		A_SetRoll(0);
		A_SetScale(0.50*0.15);
		}
    MISL CC random(1,3)
		{
		A_FadeIn(0.01);
		A_SetRoll(2);
		A_SetScale(0.50*0.20);
		}
    MISL CC random(1,3)
		{
		A_FadeIn(0.01);
		A_SetRoll(4);
		A_SetScale(0.50*0.25);
		}
    MISL CC random(1,3)
		{
		A_FadeIn(0.01);
		A_SetRoll(6);
		A_SetScale(0.50*0.30);
		}
    MISL CC random(1,3)
		{
		A_FadeIn(0.01);
		A_SetRoll(8);
		A_SetScale(0.50*0.35);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(10);
		A_SetScale(0.50*0.40);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(12);
		A_SetScale(0.50*0.42);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(14);
		A_SetScale(0.50*0.44);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(16);
		A_SetScale(0.50*0.46);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(18);
		A_SetScale(0.50*0.48);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(20);
		A_SetScale(0.50*0.50);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(22);
		A_SetScale(0.50*0.52);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(24);
		A_SetScale(0.50*0.54);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(26);
		A_SetScale(0.50*0.56);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(28);
		A_SetScale(0.50*0.58);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(30);
		A_SetScale(0.50*0.60);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(32);
		A_SetScale(0.50*0.62);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(34);
		A_SetScale(0.50*0.64);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(36);
		A_SetScale(0.50*0.66);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(38);
		A_SetScale(0.50*0.68);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(40);
		A_SetScale(0.50*0.70);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(42);
		A_SetScale(0.50*0.72);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(44);
		A_SetScale(0.50*0.74);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(46);
		A_SetScale(0.50*0.76);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(48);
		A_SetScale(0.50*0.78);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(50);
		A_SetScale(0.50*0.80);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(52);
		A_SetScale(0.50*0.82);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(54);
		A_SetScale(0.50*0.84);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(56);
		A_SetScale(0.50*0.86);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(58);
		A_SetScale(0.50*0.88);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(60);
		A_SetScale(0.50*0.90);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(62);
		A_SetScale(0.50*0.92);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(64);
		A_SetScale(0.50*0.94);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(66);
		A_SetScale(0.50*0.96);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(68);
		A_SetScale(0.50*0.98);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(70);
		A_SetScale(0.50*1.00);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(72);
		A_SetScale(0.50*1.02);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(74);
		A_SetScale(0.50*1.04);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(76);
		A_SetScale(0.50*1.06);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(78);
		A_SetScale(0.50*1.08);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(80);
		A_SetScale(0.50*1.10);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(82);
		A_SetScale(0.50*1.12);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(84);
		A_SetScale(0.50*1.14);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(86);
		A_SetScale(0.50*1.16);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(88);
		A_SetScale(0.50*1.18);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(90);
		A_SetScale(0.50*1.20);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(92);
		A_SetScale(0.50*1.22);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(94);
		A_SetScale(0.50*1.24);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(96);
		A_SetScale(0.50*1.26);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(98);
		A_SetScale(0.50*1.28);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(100);
		A_SetScale(0.50*1.30);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(102);
		A_SetScale(0.50*1.32);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(104);
		A_SetScale(0.50*1.34);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(106);
		A_SetScale(0.50*1.36);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(108);
		A_SetScale(0.50*1.38);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(110);
		A_SetScale(0.50*1.40);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(112);
		A_SetScale(0.50*1.42);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(114);
		A_SetScale(0.50*1.44);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(116);
		A_SetScale(0.50*1.46);
		}
    MISL CC random(1,3)
		{
		A_FadeOut(0.01);
		A_SetRoll(118);
		A_SetScale(0.50*1.48);
		}
    Goto Death
  Death:
    MISL CCCCCCCCCC random(1,3)
		{
		A_FadeOut(0.10);
		A_SetRoll(120);
		A_SetScale(0.50*1.50);
		}
	Stop
  }
}

ACTOR SmallSlowSmoke : VisualSpecialEffect
{
  Translation "0:255=#[128,128,128]"
  Radius 0
  Height 0
  RenderStyle Shaded
  Alpha 0.05
  Scale 0.08
  States
  {
  Spawn:
    MISL CC random(4,6)
		{
		A_FadeIn(0.01);
		A_SetRoll(0);
		A_SetScale(0.50*0.15);
		}
    MISL CC random(4,6)
		{
		A_FadeIn(0.01);
		A_SetRoll(2);
		A_SetScale(0.50*0.20);
		}
    MISL CC random(4,6)
		{
		A_FadeIn(0.01);
		A_SetRoll(4);
		A_SetScale(0.50*0.25);
		}
    MISL CC random(4,6)
		{
		A_FadeIn(0.01);
		A_SetRoll(6);
		A_SetScale(0.50*0.30);
		}
    MISL CC random(4,6)
		{
		A_FadeIn(0.01);
		A_SetRoll(8);
		A_SetScale(0.50*0.35);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(10);
		A_SetScale(0.50*0.40);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(12);
		A_SetScale(0.50*0.42);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(14);
		A_SetScale(0.50*0.44);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(16);
		A_SetScale(0.50*0.46);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(18);
		A_SetScale(0.50*0.48);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(20);
		A_SetScale(0.50*0.50);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(22);
		A_SetScale(0.50*0.52);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(24);
		A_SetScale(0.50*0.54);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(26);
		A_SetScale(0.50*0.56);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(28);
		A_SetScale(0.50*0.58);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(30);
		A_SetScale(0.50*0.60);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(32);
		A_SetScale(0.50*0.62);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(34);
		A_SetScale(0.50*0.64);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(36);
		A_SetScale(0.50*0.66);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(38);
		A_SetScale(0.50*0.68);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(40);
		A_SetScale(0.50*0.70);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(42);
		A_SetScale(0.50*0.72);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(44);
		A_SetScale(0.50*0.74);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(46);
		A_SetScale(0.50*0.76);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(48);
		A_SetScale(0.50*0.78);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(50);
		A_SetScale(0.50*0.80);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(52);
		A_SetScale(0.50*0.82);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(54);
		A_SetScale(0.50*0.84);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(56);
		A_SetScale(0.50*0.86);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(58);
		A_SetScale(0.50*0.88);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(60);
		A_SetScale(0.50*0.90);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(62);
		A_SetScale(0.50*0.92);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(64);
		A_SetScale(0.50*0.94);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(66);
		A_SetScale(0.50*0.96);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(68);
		A_SetScale(0.50*0.98);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(70);
		A_SetScale(0.50*1.00);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(72);
		A_SetScale(0.50*1.02);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(74);
		A_SetScale(0.50*1.04);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(76);
		A_SetScale(0.50*1.06);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(78);
		A_SetScale(0.50*1.08);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(80);
		A_SetScale(0.50*1.10);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(82);
		A_SetScale(0.50*1.12);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(84);
		A_SetScale(0.50*1.14);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(86);
		A_SetScale(0.50*1.16);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(88);
		A_SetScale(0.50*1.18);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(90);
		A_SetScale(0.50*1.20);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(92);
		A_SetScale(0.50*1.22);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(94);
		A_SetScale(0.50*1.24);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(96);
		A_SetScale(0.50*1.26);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(98);
		A_SetScale(0.50*1.28);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(100);
		A_SetScale(0.50*1.30);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(102);
		A_SetScale(0.50*1.32);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(104);
		A_SetScale(0.50*1.34);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(106);
		A_SetScale(0.50*1.36);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(108);
		A_SetScale(0.50*1.38);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(110);
		A_SetScale(0.50*1.40);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(112);
		A_SetScale(0.50*1.42);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(114);
		A_SetScale(0.50*1.44);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(116);
		A_SetScale(0.50*1.46);
		}
    MISL CC random(4,6)
		{
		A_FadeOut(0.01);
		A_SetRoll(118);
		A_SetScale(0.50*1.48);
		}
    Goto Death
  Death:
    MISL CCCCCCCCCC random(4,6)
		{
		A_FadeOut(0.10);
		A_SetRoll(120);
		A_SetScale(0.50*1.50);
		}
	Stop
  }
}


ACTOR LargeGreenBoom : LargeBoom
{
	Translation "0:255=#[0,255,0]"
}


ACTOR SmallGreenBoom : SmallBoom
{
	Translation "0:255=#[0,255,0]"
}

ACTOR GreenAdditiveBoom : AdditiveBoom
{
	Translation "0:255=#[0,255,0]"
}

ACTOR LargeGreenAdditiveBoom : LargeAdditiveBoom
{
	Translation "0:255=#[0,255,0]"
}

ACTOR SmallGreenAdditiveBoom : SmallAdditiveBoom
{
	Translation "0:255=#[0,255,0]"
}



Actor SlowBarSmokeSmall : SmallSlowSmoke
{
  +BRIGHT
  Translation "0:255=#[33,255,25]"
  RenderStyle Translucent
  Alpha 0.004
}

Actor NukeParticle : BouncyPhysicalThing replaces SlimeChunk
{
  +BRIGHT
  +SPRITEANGLE
  Translation "112:127=#[0,255,0]"
  SpriteAngle 180
  RenderStyle Add
  Alpha 0.80
  Scale 0.16
  BounceCount 1
  BounceFactor 0.20
  Gravity 0.8
  Friction 1.02
  States
  {
  Spawn:
	BAL7 A 0 
	BAL7 AAAAA random(2,6)
	Loop
  Death:
    BAL7 ABCDE random(2,6) 
	Stop
  }
}

ACTOR NukeParticle1 : NukeParticle
{
	Scale 0.12
	Gravity 0.5
}

ACTOR NukeParticle2 : NukeParticle
{
	Scale 0.15
	Gravity 0.6
}

ACTOR NukeParticle3 : NukeParticle
{
	Scale 0.20
	Gravity 0.8
}

ACTOR NukeParticle4 : NukeParticle
{
	Scale 0.25
	Gravity 1.0
}

ACTOR NukeParticle5 : NukeParticle
{
	Scale 0.30
	Gravity 1.2
}


Actor BarSmokeSmall : SmallSmoke
{
  +BRIGHT
  Translation "32:47=152:159", "168:191=112:123"
  RenderStyle Translucent
  Alpha 0.01
}


Actor BarrelSplash : VisualSpecialEffect
{
  +BRIGHT
  Radius 0
  Height 0
  Mass 0
  States
  {
	Spawn:
		TNT1 A 0
		TNT1 A 0
		{
		A_SpawnItemEx("NukeParticle1", random(-8, 8), random(-4, 4), 0, 0.10*random(-12, 12), 0.10*random(-12, 12), 0.10*random(12,60));
		A_SpawnItemEx("NukeParticle1", random(-8, 8), random(-4, 4), 0, 0.10*random(-12, 12), 0.10*random(-12, 12), 0.10*random(12,48));
		A_SpawnItemEx("NukeParticle1", random(-8, 8), random(-4, 4), 0, 0.10*random(-12, 12), 0.10*random(-12, 12), 0.10*random(12,48));
		A_SpawnItemEx("NukeParticle1", random(-8, 8), random(-4, 4), 0, 0.10*random(-12, 12), 0.10*random(-12, 12), 0.10*random(12,36));
		A_SpawnItemEx("NukeParticle1", random(-8, 8), random(-4, 4), 0, 0.10*random(-12, 12), 0.10*random(-12, 12), 0.10*random(12,36));
		A_SpawnItemEx("NukeParticle2", random(-8, 8), random(-4, 4), 0, 0.10*random(-12, 12), 0.10*random(-12, 12), 0.10*random(12,24));
		A_SpawnItemEx("NukeParticle2", random(-8, 8), random(-4, 4), 0, 0.10*random(-12, 12), 0.10*random(-12, 12), 0.10*random(12,24));
		A_SpawnItemEx("NukeParticle3", random(-8, 8), random(-4, 4), 0, 0.10*random(-12, 12), 0.10*random(-12, 12), 0.10*random(12,24));
		A_SpawnItemEx("NukeParticle4", random(-8, 8), random(-4, 4), 0, 0.10*random(-12, 12), 0.10*random(-12, 12), 0.10*random(12,24));
		A_SpawnItemEx("NukeParticle5", random(-8, 8), random(-4, 4), 0, 0.10*random(-12, 12), 0.10*random(-12, 12), 0.10*random(12,24));
		}
		Stop
	}
}


ACTOR GreenBoom : Boom
{
	Translation "0:255=#[0,255,0]"
}


ACTOR NukeKABOOM : VisualSpecialEffect
{
  States
  {
  Spawn:
    TNT1 A 1
	TNT1 AAA 0 A_SpawnItemEx("GreenBoom", random(-6, 6), random(-6, 6), random(-6, 6))
	TNT1 AAA 0 A_SpawnDebris("GreenEmber")
	//TNT1 AAAA 0 A_SpawnItemEx("NukeFlamingEmber",0,0,0,random(-4,4),random(-4,4),random(0,2))
	//TNT1 AAAAAA 0 A_SpawnItemEx("BarSmoke", random(-3,3), random(-3,3), random(-3,3),0.10*random(-8,8),0.10*random(-8,8),0.10*random(1,18))
	TNT1 A 0 A_SpawnItemEx("LargeGreenBoom", random(-6, 6), random(-6, 6), random(-6, 6),0,0,1)
	//TNT1 AAA 0 A_SpawnItemEx("SmallGreenBoom", random(-6, 6), random(-6, 6), random(-6, 6))
	TNT1 A 1
	TNT1 AAA 0 A_SpawnItemEx("GreenAdditiveBoom", random(-6, 6), random(-6, 6), random(-6, 6))
	TNT1 AAA 0 A_SpawnDebris("GreenEmber")
	//TNT1 AAAAAA 0 A_SpawnItemEx("BarSmoke", random(-3,3), random(-3,3), random(-3,3),0.10*random(-8,8),0.10*random(-8,8),0.10*random(1,18))
	TNT1 A 0 A_SpawnItemEx("LargeGreenAdditiveBoom", random(-6, 6), random(-6, 6), random(-6, 6))
	//TNT1 AAA 0 A_SpawnItemEx("SmallGreenAdditiveBoom", random(-6, 6), random(-6, 6), random(-6, 6))
	TNT1 A 1
	TNT1 AAA 0 A_SpawnItemEx("GreenAdditiveBoom", random(-6, 6), random(-6, 6), random(-6, 6))
	TNT1 AAA 0 A_SpawnDebris("GreenEmber")
	//TNT1 AAAAAA 0 A_SpawnItemEx("BarSmoke", random(-3,3), random(-3,3), random(-3,3),0.10*random(-8,8),0.10*random(-8,8),0.10*random(1,18))
	TNT1 A 0 A_SpawnItemEx("LargeGreenAdditiveBoom", random(-6, 6), random(-6, 6), random(-6, 6))
	//TNT1 AAA 0 A_SpawnItemEx("SmallGreenAdditiveBoom", random(-6, 6), random(-6, 6), random(-6, 6))
	Stop
  }
}


ACTOR NewBarrel : ExplosiveBarrel replaces ExplosiveBarrel
{
	PainChance 255
	Radius 10
	Height 32
	DamageFactor "Melee", 0.0
	DamageFactor "FistFace", 0.0
	Scale 1.02
	Translation "16:63=#[0,255,0]", "160:255=#[0,255,0]"
	+PUSHABLE
	+DONTGIB
	+BOUNCEONWALLS
	+QUICKTORETALIATE
	+RANDOMIZE
	States
	{
	Spawn:
//I modified the spawn animation to include the smoke effects in both frames so it feels more dynamic
		BAR1 A random(4,6) A_SpawnItemEx("SlowBarSmokeSmall", random(-3,3), random(-3,3), 30,0.010*random(-16,16),0.010*random(-16,16),0.010*random(5,18),0,0,64)
                BAR1 B random(4,6) A_SpawnItemEx("SlowBarSmokeSmall", random(-3,3), random(-3,3), 30,0.010*random(-16,16),0.010*random(-16,16),0.010*random(5,18),0,0,64)
		Loop
	Pain:
		TNT1 A 0
		TNT1 A 0 
		{
		A_Pain;
		A_SpawnItemEx("BarrelSplash", random(-1,1), 0, 33);
		A_SpawnItemEx("BarrelSplash", random(-1,1), 0, 33);
		A_SpawnItemEx("BarrelSplash", random(-1,1), 0, 33);
		}
		BAR1 BBAABBBBAAAABB 1 Bright A_SpawnItemEx("BarSmokeSmall", random(-3,3), random(-3,3), 30,0.10*random(-3,3),0.10*random(-3,3),0.10*random(8,16))
		Goto Spawn
	Death:
		BEXP AB 4 BRIGHT
		{
		A_SpawnItemEx("BarrelSplash", random(-1,1), 0, 33);
		A_SpawnItemEx("BarrelSplash", random(-1,1), 0, 33);
		A_SpawnItemEx("BarrelSplash", random(-1,1), 0, 33);
		A_SpawnItemEx("BarSmokeSmall", random(-3,3), random(-3,3), 30, 0.10*random(-4,4), 0.10*random(-4,4), 0.10*random(8,16));
		A_SpawnItemEx("BarSmokeSmall", random(-3,3), random(-3,3), 30, 0.10*random(-5,5), 0.10*random(-5,5), 0.10*random(8,16));
		A_SpawnItemEx("BarSmokeSmall", random(-3,3), random(-3,3), 30, 0.10*random(-6,6), 0.10*random(-6,6), 0.10*random(8,16));

		}
		BEXP C 1 BRIGHT
		{
		A_Scream;
		A_Explode;
		A_AlertMonsters;
		A_NoBlocking;
		A_quake (3,10,0,750,0);
		A_quake (1,25,0,1000,0);
		A_SpawnItemEx("NukeKABOOM", 0, 0, 20);
		}
		BEXP C 4 BRIGHT 
		BEXP D 6 BRIGHT
		TNT1 A 1050 A_BarrelDestroy
		TNT1 A 5 A_Respawn
		Wait
      Stop
	  }
}